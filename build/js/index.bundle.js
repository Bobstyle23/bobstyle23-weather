(()=>{"use strict";var t={283:(t,e,r)=>{r.d(e,{O:()=>a});const a={clear:[0,1],cloudy:[2,3],fog:[45,48],drizzle:[51,53,55],rain:[61,63,65,80,81,82],snow:[71,73,75],thunderstorm:[95,96,99]}},359:(t,e,r)=>{r.d(e,{X:()=>a});class a{constructor(){}async fetchLocationData(t){const e=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${t}`);return await e.json()}async fetchWeatherData(t){const{latitude:e,longitude:r,temperatureUnit:a="celsius",windspeed:n="kmh",precipitation:o="mm"}=t,i=`https://api.open-meteo.com/v1/forecast?latitude=${e}&longitude=${r}&hourly=temperature_2m,apparent_temperature,relative_humidity_2m,precipitation,weathercode,windspeed_10m,cloudcover,uv_index\n&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,uv_index_max\n&temperature_unit=${a}\n&windspeed_unit=${n}\n&precipitation_unit=${o}\n&timezone=auto`,s=await fetch(i);return await s.json()}async fetchUsersCountry(t,e){const r=await fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${t}&lon=${e}&limit=1&appid=47ba0bbf5c9aa13204ad8adb08cb800f`);return(await r.json())[0]}async fetchFullCountryName(t){const e=await fetch(`https://restcountries.com/v3.1/alpha/${t}`);return(await e.json())[0]}}},886:(t,e,r)=>{r.d(e,{BF:()=>n});var a=r(283);new class{constructor(){this.observables=[]}subscribe(t){this.observables.push(t)}unsubscribe(t){this.observables=this.observables.filter(e=>e!==t)}notify(t){this.observables.forEach(e=>e(t))}};const n=new class{constructor(){}getWeatherGroupByCode(t){for(const[e,r]of Object.entries(a.O))if(r.includes(t))return e;return"unknown"}debounce(t,e){let r;return function(...a){clearTimeout(r),r=setTimeout(()=>t(...a),e)}}}}},e={};function r(a){var n=e[a];if(void 0!==n)return n.exports;var o=e[a]={exports:{}};return t[a](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var a in e)r.o(e,a)&&!r.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var a=r(359),n=r(886);const o=new WeakMap;class i{constructor(){this.cacheDOM(),this.bindEvents(),this.loading=!1,this.getUsersLocation(),this.getUsersTime()}static weatherData=new a.X;static searchValue="";static userCurrentData={latitude:null,longitude:null,dateAndTime:null};set locationData(t){o.set(this,t)}get locationData(){return o.get(this)}cacheDOM(){this.searchField=document.querySelector(".search__field"),this.searchBtn=document.querySelector(".search__btn"),this.currentWeatherBgContainer=document.querySelector(".current__bg-img"),this.currentWeatherBgLoading=document.querySelector(".current__loading"),this.currentCity=document.querySelector(".current__city"),this.currentDate=document.querySelector(".current__date"),this.currentDegree=document.querySelector(".current__weather-degree"),this.currentWeatherIcon=document.querySelector(".current__weather-icon"),this.currentUnitValues=document.querySelectorAll(".current__unit--value"),this.dailyForecastUnits=document.querySelectorAll(".forecast__unit"),this.hourlyDropdownSelected=document.querySelector(".forecast__header .selected__value"),this.initialSelectedDay=this.hourlyDropdownSelected.textContent}loadingState(t){this.loading=t,this.savedDailyForecastUnits||(this.savedDailyForecastUnits=[...this.dailyForecastUnits].map(t=>[...t.children].map(t=>t.cloneNode(!0)))),t?(this.currentWeatherBgContainer.setAttribute("hidden",""),this.currentWeatherBgLoading.removeAttribute("hidden"),this.currentUnitValues.forEach(t=>{t.textContent="-"}),this.dailyForecastUnits.forEach(t=>t.innerHTML=""),this.hourlyDropdownSelected.textContent="-"):(this.currentWeatherBgContainer.removeAttribute("hidden"),this.currentWeatherBgLoading.setAttribute("hidden",""),this.currentUnitValues.forEach(t=>t.textContent=""),this.dailyForecastUnits.forEach((t,e)=>{this.savedDailyForecastUnits[e].forEach(e=>t.appendChild(e))}),this.hourlyDropdownSelected.textContent=this.initialSelectedDay)}bindEvents(){const t=n.BF.debounce(t=>{this.getLocationData(t.target.value)},500);this.searchField.addEventListener("input",e=>{i.searchValue=e.target.value,t(e)}),this.searchBtn.addEventListener("click",()=>this.getWeatherDataByLocation({latitude:this.locationData[0].latitude,longitude:this.locationData[0].longitude}))}getLocationData(t){i.weatherData.fetchLocationData(t).then(t=>{this.locationData=t.results,console.log(t.results)})}getWeatherDataByLocation(t){i.weatherData.fetchWeatherData(t).then(t=>{console.log(t)})}getUsersLocation(){try{this.loadingState(!0),navigator.geolocation?navigator.geolocation.getCurrentPosition(async t=>{const e=t.coords.latitude,r=t.coords.longitude;i.userCurrentData.latitude=e,i.userCurrentData.longitude=r,this.loadingState(!0),await this.updateCurrentUserWeather(),this.loadingState(!1)},t=>{switch(t.code){case t.PERMISSION_DENIED:console.error("User denied the request for geolocation");break;case t.POSITION_UNAVAILABLE:console.error("Location information unavailable");break;case t.TIMEOUT:console.error("The request to get user location timed out");break;default:console.error("Unknown error occured.")}this.loadingState(!1)}):(console.error("geolocation is not supporter by this browser"),this.loadingState(!1))}catch(t){console.log(t),this.loadingState(!1)}}getUsersTime(){const t=(new Date).toLocaleString(void 0,{weekday:"long",year:"numeric",month:"short",day:"numeric",hour:"numeric"});i.userCurrentData.dateAndTime=t.split(",").slice(0,3)}async updateCurrentUserWeather(){try{const{latitude:t,longitude:e}=i.userCurrentData,r=await i.weatherData.fetchWeatherData({latitude:t,longitude:e});console.log(r);const a=await i.weatherData.fetchUsersCountry(t,e),n=await i.weatherData.fetchFullCountryName(a.country);this.currentCity.textContent=`${a.name}, ${n.name.common}`,this.currentDate.textContent=i.userCurrentData.dateAndTime}catch(t){console.error("Error updating current user weather:",t)}}}new i})();