(()=>{"use strict";var e={283:(e,t,r)=>{r.d(t,{O:()=>a});const a={clear:[0,1],cloudy:[2,3],fog:[45,48],drizzle:[51,53,55],rain:[61,63,65,80,81,82],snow:[71,73,75],thunderstorm:[95,96,99]}},359:(e,t,r)=>{r.d(t,{X:()=>a});class a{constructor(){}async fetchLocationData(e){const t=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${e}`);return await t.json()}async fetchWeatherData(e){const{latitude:t,longitude:r,temperatureUnit:a="celsius",windspeed:o="kmh",precipitation:n="mm"}=e,i=`https://api.open-meteo.com/v1/forecast?latitude=${t}&longitude=${r}&hourly=temperature_2m,apparent_temperature,relative_humidity_2m,precipitation,weathercode,windspeed_10m,cloudcover,uv_index\n&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,uv_index_max\n&temperature_unit=${a}\n&windspeed_unit=${o}\n&precipitation_unit=${n}\n&timezone=auto`,s=await fetch(i);return await s.json()}}},886:(e,t,r)=>{r.d(t,{BF:()=>o});var a=r(283);new class{constructor(){this.observables=[]}subscribe(e){this.observables.push(e)}unsubscribe(e){this.observables=this.observables.filter(t=>t!==e)}notify(e){this.observables.forEach(t=>t(e))}};const o=new class{constructor(){}getWeatherGroupByCode(e){for(const[t,r]of Object.entries(a.O))if(r.includes(e))return t;return"unknown"}debounce(e,t){let r;return function(...a){clearTimeout(r),r=setTimeout(()=>e(...a),t)}}}}},t={};function r(a){var o=t[a];if(void 0!==o)return o.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var a=r(359),o=r(886);const n=new WeakMap;class i{constructor(){this.cacheDOM(),this.bindEvents(),this.getUsersLocation(),this.getUsersTime()}static weatherData=new a.X;static searchValue="";static userCurrentData={latitude:null,longitude:null,dateAndTime:null};set locationData(e){n.set(this,e)}get locationData(){return n.get(this)}cacheDOM(){this.searchField=document.querySelector(".search__field"),this.searchBtn=document.querySelector(".search__btn"),this.currentCity=document.querySelector(".current__city"),this.currentDate=document.querySelector(".current__date"),this.currentDegree=document.querySelector(".current__weather-degree"),this.currentWeatherIcon=document.querySelector(".current__weather-icon")}bindEvents(){const e=o.BF.debounce(e=>{this.getLocationData(e.target.value)},500);this.searchField.addEventListener("input",t=>{i.searchValue=t.target.value,e(t)}),this.searchBtn.addEventListener("click",()=>this.getWeatherDataByLocation({latitude:this.locationData[0].latitude,longitude:this.locationData[0].longitude}))}getLocationData(e){i.weatherData.fetchLocationData(e).then(e=>{this.locationData=e.results,console.log(e.results)})}getWeatherDataByLocation(e){i.weatherData.fetchWeatherData(e).then(e=>{console.log(e)})}getUsersLocation(){navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{const t=e.coords.latitude,r=e.coords.longitude;i.userCurrentData.latitude=t,i.userCurrentData.longitude=r,this.updateCurrentWeather()},e=>{switch(e.code){case e.PERMISSION_DENIED:console.error("User denied the request for geolocation");break;case e.POSITION_UNAVAILABLE:console.error("Location information unavailable");break;case e.TIMEOUT:console.error("The request to get user location timed out");break;default:console.error("Unknown error occured.")}}):console.error("geolocation is not supporter by this browser")}getUsersTime(){const e=(new Date).toLocaleString(void 0,{weekday:"long",year:"numeric",month:"short",day:"numeric"});i.userCurrentData.dateAndTime=e.split(",")}updateCurrentWeather(){this.currentDate.textContent=i.userCurrentData.dateAndTime}}new i})();