(()=>{"use strict";var t={283:(t,e,a)=>{a.d(e,{O:()=>n});const n={clear:[0,1],cloudy:[2,3],fog:[45,48],drizzle:[51,53,55],rain:[61,63,65,80,81,82],snow:[71,73,75],thunderstorm:[95,96,99]}},359:(t,e,a)=>{a.d(e,{X:()=>n});class n{constructor(){}async fetchLocationData(t){const e=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${t}`);return await e.json()}async fetchWeatherData(t){const{latitude:e,longitude:a,temperatureUnit:n="celsius",windspeed:r="kmh",precipitation:o="mm"}=t,i=`https://api.open-meteo.com/v1/forecast?latitude=${e}&longitude=${a}&hourly=temperature_2m,apparent_temperature,relative_humidity_2m,precipitation,weathercode,windspeed_10m,cloudcover,uv_index\n&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,uv_index_max\n&temperature_unit=${n}\n&windspeed_unit=${r}\n&precipitation_unit=${o}\n&timezone=auto`,s=await fetch(i);return await s.json()}}},886:(t,e,a)=>{a.d(e,{F:()=>r});var n=a(283);class r{constructor(){}getWeatherGroupByCode(t){for(const[e,a]of Object.entries(n.O))if(a.includes(t))return e;return"unknown"}debounce(t,e){let a;return function(...n){clearTimeout(a),a=setTimeout(()=>t(...n),e)}}}}},e={};function a(n){var r=e[n];if(void 0!==r)return r.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,a),o.exports}a.d=(t,e)=>{for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n=a(359),r=a(886);const o=new WeakMap;new class{constructor(){this.cacheDOM(),this.bindEvents(),this.weatherData=new n.X}set locationData(t){o.set(this,t)}get locationData(){return o.get(this)}cacheDOM(){this.searchField=document.querySelector(".search__field"),this.searchBtn=document.querySelector(".search__btn")}bindEvents(){const t=new r.F;this.searchField.addEventListener("input",t.debounce(t=>this.getLocationData(t.target.value),500)),this.searchBtn.addEventListener("click",()=>this.getWeatherDataByLocation({latitude:this.locationData[0].latitude,longitude:this.locationData[0].longitude}))}getLocationData(t){this.weatherData.fetchLocationData(t).then(t=>{this.locationData=t.results,console.log(t.results)})}getWeatherDataByLocation(t){this.weatherData.fetchWeatherData(t).then(t=>{console.log(t)})}}})();