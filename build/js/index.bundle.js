(()=>{"use strict";var t={283:(t,e,a)=>{a.d(e,{O:()=>r});const r={clear:[0,1],cloudy:[2,3],fog:[45,48],drizzle:[51,53,55],rain:[61,63,65,80,81,82],snow:[71,73,75],thunderstorm:[95,96,99]}},359:(t,e,a)=>{a.d(e,{X:()=>r});class r{constructor(){}async fetchLocationData(t){const e=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${t}`);return await e.json()}async fetchWeatherData(t){const{latitude:e,longitude:a,temperatureUnit:r="celsius",windspeed:n="kmh",precipitation:o="mm"}=t,i=`https://api.open-meteo.com/v1/forecast?latitude=${e}&longitude=${a}&hourly=temperature_2m,apparent_temperature,relative_humidity_2m,precipitation,weathercode,windspeed_10m,cloudcover,uv_index\n&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,uv_index_max\n&temperature_unit=${r}\n&windspeed_unit=${n}\n&precipitation_unit=${o}\n&timezone=auto`,s=await fetch(i);return await s.json()}}},886:(t,e,a)=>{a.d(e,{F:()=>n});var r=a(283);class n{constructor(){}getWeatherGroupByCode(t){for(const[e,a]of Object.entries(r.O))if(a.includes(t))return e;return"unknown"}debounce(t,e){let a;return function(...r){clearTimeout(a),a=setTimeout(()=>t(...r),e)}}}new class{constructor(){this.observables=[]}subscribe(t){this.observables.push(t)}unsubscribe(t){this.observables=this.observables.filter(e=>e!==t)}notify(t){this.observables.forEach(e=>e(t))}}}},e={};function a(r){var n=e[r];if(void 0!==n)return n.exports;var o=e[r]={exports:{}};return t[r](o,o.exports,a),o.exports}a.d=(t,e)=>{for(var r in e)a.o(e,r)&&!a.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var r=a(359),n=a(886);const o=new WeakMap;class i{constructor(){this.cacheDOM(),this.bindEvents()}static weatherData=new r.X;static searchValue="";set locationData(t){o.set(this,t)}get locationData(){return o.get(this)}cacheDOM(){this.searchField=document.querySelector(".search__field"),this.searchBtn=document.querySelector(".search__btn")}bindEvents(){const t=new n.F;this.searchField.addEventListener("input",e=>{i.searchValue=e.target.value,t.debounce(this.getLocationData(e.target.value),500)}),this.searchBtn.addEventListener("click",()=>this.getWeatherDataByLocation({latitude:this.locationData[0].latitude,longitude:this.locationData[0].longitude}))}getLocationData(t){i.weatherData.fetchLocationData(t).then(t=>{this.locationData=t.results,console.log(t.results)})}getWeatherDataByLocation(t){i.weatherData.fetchWeatherData(t).then(t=>{console.log(t)})}}new i})();