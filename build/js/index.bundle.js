(()=>{"use strict";var e={283:(e,t,r)=>{r.d(t,{O:()=>a});const a={clear:[0,1],cloudy:[2,3],fog:[45,48],drizzle:[51,53,55],rain:[61,63,65,80,81,82],snow:[71,73,75],thunderstorm:[95,96,99]}},359:(e,t,r)=>{r.d(t,{X:()=>a});class a{constructor(){}async fetchLocationData(e){const t=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${e}`);return await t.json()}async fetchWeatherData(e){const{latitude:t,longitude:r,temperatureUnit:a="celsius",windspeed:n="kmh",precipitation:o="mm"}=e,i=`https://api.open-meteo.com/v1/forecast?latitude=${t}&longitude=${r}&hourly=temperature_2m,apparent_temperature,relative_humidity_2m,precipitation,weathercode,windspeed_10m,cloudcover,uv_index\n&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,uv_index_max\n&temperature_unit=${a}\n&windspeed_unit=${n}\n&precipitation_unit=${o}\n&timezone=auto`,s=await fetch(i);return await s.json()}async fetchUsersCountry(e,t){const r=await fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${e}&lon=${t}&limit=1&appid=47ba0bbf5c9aa13204ad8adb08cb800f`);return(await r.json())[0]}async fetchFullCountryName(e){const t=await fetch(`https://restcountries.com/v3.1/alpha/${e}`);return(await t.json())[0]}}},886:(e,t,r)=>{r.d(t,{BF:()=>n});var a=r(283);new class{constructor(){this.observables=[]}subscribe(e){this.observables.push(e)}unsubscribe(e){this.observables=this.observables.filter(t=>t!==e)}notify(e){this.observables.forEach(t=>t(e))}};const n=new class{constructor(){}getWeatherGroupByCode(e){for(const[t,r]of Object.entries(a.O))if(r.includes(e))return t;return"unknown"}debounce(e,t){let r;return function(...a){clearTimeout(r),r=setTimeout(()=>e(...a),t)}}}}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,r),o.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var a=r(359),n=r(886);const o=new WeakMap;class i{constructor(){this.cacheDOM(),this.bindEvents(),this.loading=!1,this.getUsersLocation(),this.getUsersTime()}static weatherData=new a.X;static searchValue="";static userCurrentData={latitude:null,longitude:null,dateAndTime:null};set locationData(e){o.set(this,e)}get locationData(){return o.get(this)}cacheDOM(){this.searchField=document.querySelector(".search__field"),this.searchBtn=document.querySelector(".search__btn"),this.currentWeatherBgContainer=document.querySelector(".current__bg-img"),this.currentWeatherBgLoading=document.querySelector(".current__loading"),this.currentCity=document.querySelector(".current__city"),this.currentDate=document.querySelector(".current__date"),this.currentDegree=document.querySelector(".current__weather-degree"),this.currentWeatherIcon=document.querySelector(".current__weather-icon"),this.currentUnitValues=document.querySelectorAll(".current__unit--value"),this.dailyForecastUnits=document.querySelectorAll(".forecast__unit"),this.hourlyDropdownSelected=document.querySelector(".forecast__header .selected__value"),this.initialSelectedDay=this.hourlyDropdownSelected.textContent}loadingState(e){this.loading=e,this.savedDailyForecastUnits||(this.savedDailyForecastUnits=[...this.dailyForecastUnits].map(e=>[...e.children].map(e=>e.cloneNode(!0)))),this.savedCurrentUnitValues||(this.savedCurrentUnitValues=Array.from(this.currentUnitValues).map(e=>e.cloneNode(!0))),e?(this.currentWeatherBgContainer.setAttribute("hidden",""),this.currentWeatherBgLoading.removeAttribute("hidden"),this.currentUnitValues.forEach(e=>{e.textContent="-"}),this.dailyForecastUnits.forEach(e=>e.innerHTML=""),this.hourlyDropdownSelected.textContent="-"):(this.currentWeatherBgContainer.removeAttribute("hidden"),this.currentWeatherBgLoading.setAttribute("hidden",""),this.currentUnitValues.forEach((e,t)=>e.replaceWith(this.savedCurrentUnitValues[t].cloneNode(!0))),this.dailyForecastUnits.forEach((e,t)=>{this.savedDailyForecastUnits[t].forEach(t=>e.appendChild(t))}),this.hourlyDropdownSelected.textContent=this.initialSelectedDay)}bindEvents(){const e=n.BF.debounce(e=>{this.getLocationData(e.target.value)},500);this.searchField.addEventListener("input",t=>{i.searchValue=t.target.value,e(t)}),this.searchBtn.addEventListener("click",()=>this.getWeatherDataByLocation({latitude:this.locationData[0].latitude,longitude:this.locationData[0].longitude}))}getLocationData(e){i.weatherData.fetchLocationData(e).then(e=>{this.locationData=e.results,console.log(e.results)})}getWeatherDataByLocation(e){i.weatherData.fetchWeatherData(e).then(e=>{console.log(e)})}getUsersLocation(){try{this.loadingState(!0),navigator.geolocation?navigator.geolocation.getCurrentPosition(async e=>{const t=e.coords.latitude,r=e.coords.longitude;i.userCurrentData.latitude=t,i.userCurrentData.longitude=r,this.loadingState(!0),await this.updateCurrentUserWeather(),this.loadingState(!1)},e=>{switch(e.code){case e.PERMISSION_DENIED:console.error("User denied the request for geolocation");break;case e.POSITION_UNAVAILABLE:console.error("Location information unavailable");break;case e.TIMEOUT:console.error("The request to get user location timed out");break;default:console.error("Unknown error occured.")}this.loadingState(!1)}):(console.error("geolocation is not supporter by this browser"),this.loadingState(!1))}catch(e){console.log(e),this.loadingState(!1)}}getUsersTime(){const e=(new Date).toLocaleString(void 0,{weekday:"long",year:"numeric",month:"short",day:"numeric",hour:"numeric"});i.userCurrentData.dateAndTime=e.split(",").slice(0,3)}async updateCurrentUserWeather(){try{const{latitude:e,longitude:t}=i.userCurrentData,r=await i.weatherData.fetchWeatherData({latitude:e,longitude:t});console.log(r),(new Date).toLocaleString();const a=new Date,o=new Date(a.getTime()+324e5);o.setMinutes(0,0,0);const s=o.toISOString().slice(0,13)+":00",c=r.hourly.time.indexOf(s);if(-1!==c){const e={temperature:r.hourly.temperature_2m[c],apparentTemperature:r.hourly.apparent_temperature[c],humidity:r.hourly.relative_humidity_2m[c],precipitation:r.hourly.precipitation[c],weatherCode:r.hourly.weathercode[c],windSpeed:r.hourly.windspeed_10m[c],cloudCover:r.hourly.cloudcover[c],uvIndex:r.hourly.uv_index[c]},t=[`${e.apparentTemperature.toFixed(0)}&deg;`,`${e.humidity}%`,`${e.windSpeed} ${r.hourly_units.windspeed_10m}`,`${e.precipitation} ${r.hourly_units.precipitation}`];this.currentDegree.innerHTML=`${e.temperature.toFixed(0)}&deg;`;const a=n.BF.getWeatherGroupByCode(e.weatherCode);this.currentWeatherIcon.setAttribute("src",`./img/icon-${"clear"===a?"overcast":a}.webp`),this.currentUnitValues.forEach((e,r)=>{e.innerHTML=t[r]}),console.log(e)}const u=await i.weatherData.fetchUsersCountry(e,t),l=await i.weatherData.fetchFullCountryName(u.country);this.currentCity.textContent=`${u.name}, ${l.name.common}`,this.currentDate.textContent=i.userCurrentData.dateAndTime}catch(e){console.error("Error updating current user weather:",e)}}}new i})();